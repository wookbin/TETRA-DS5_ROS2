bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

controller_server:
  ros__parameters:
    controller_frequency: 20.0
    costmap_update_timeout: 0.30
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    use_realtime_priority: false
    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.6 #1.0
      movement_time_allowance: 10.0
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.05 #0.25
      yaw_goal_tolerance: 0.0174533 #0.25
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      approach_velocity_scaling_dist: 1.0
      cost_scaling_dist: 0.4
      cost_scaling_gain: 1.0
      desired_linear_vel: 0.8
      inflation_cost_scaling_factor: 1.75 #3.0
      lookahead_dist: 0.9 #1.0 #0.6  # Adjust to balance between responsiveness and smoothness
      lookahead_time: 1.0 #1.2  # Dynamic lookahead adjustment based on speed
      max_allowed_time_to_collision_up_to_carrot: 1.0
      max_angular_vel: 1.0 #1.2  # Allow sufficient angular velocity for tight turns
      max_anguler_accel: 3.0
      max_lookahead_dist: 1.5
      min_lookahead_dist: 0.5  # Large enough for the robot to navigate tight turns smoothly
      max_robot_pose_search_dist: 10.0
      min_approach_linear_velocity: 0.05 #0.0
      regulated_linear_scaling_min_radius: 1.0
      regulated_linear_scaling_min_speed: 0.25
      rotate_to_heading_angular_vel: 0.785398
      rotate_to_heading_min_angle: 0.785398
      transform_tolerance: 0.1
      use_collision_detection: true
      use_cost_regulated_linear_velocity_scaling: true  # Use costmap values for speed scaling
      use_interpolation: true #false
      use_regulated_linear_velocity_scaling: true  # Slow down near obstacles
      use_rotate_to_heading: true
      use_velocity_scaled_lookahead_dist: false

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 15.0 #10.0
      publish_frequency: 15.0 #10.0
      global_frame: odom
      robot_base_frame: base_footprint
      rolling_window: true
      width: 8
      height: 8
      resolution: 0.05
      footprint: "[[0.219575,0.245], [-0.3955,0.245], [-0.3955,-0.245], [0.219575,-0.245]]"
      plugins: ["obstacle_layer", "stvl_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 2.58 #1.0
        cost_scaling_factor: 1.75 #3.0
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan scan2 virtual_obstacle_source
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          obstacle_max_range: 8.0
          raytrace_max_range: 9.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          inf_is_valid: False
        scan2:
          topic: /scan2
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          obstacle_max_range: 2.0
          raytrace_max_range: 3.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          inf_is_valid: False
        virtual_obstacle_source:
          topic: /Local_virtual_wall
          data_type: PointCloud2
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          obstacle_max_range: 100.0
          raytrace_max_range: 101.0
      stvl_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        enabled: true
        voxel_decay: 2.0 #1.0
        decay_model: 0
        voxel_size: 0.05
        track_unknown_space: true
        unknown_threshold: 15
        mark_threshold: 2
        update_footprint_enabled: true
        combination_method: 1
        origin_z: 0.0
        publish_voxel_map: true #false
        transform_tolerance: 0.2 #1.0
        mapping_mode: false
        map_save_duration: 60.0
        observation_sources: pointcloud
        pointcloud:
          data_type: "PointCloud2"
          topic: /camera1/depth/color/points
          marking: true
          clearing: true
          obstacle_range: 2.5
          min_obstacle_height: 0.05
          max_obstacle_height: 2.0
          expected_update_rate: 0.0
          observation_persistence: 0.0
          inf_is_valid: false
          filter: "voxel" #"passthrough"
          voxel_min_points: 0
          clear_after_reading: true
          max_z: 2.0 # 0.7
          min_z: 0.1
          vertical_fov_angle: 1.01229 #0.7
          horizontal_fov_angle: 1.51844 #1.20428
          decay_acceleration: 2.0 #1.0
          model_type: 0
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      transform_tolerance: 0.5
      update_frequency: 5.0 #10.0
      publish_frequency: 5.0 #10.0
      width: 15
      height: 15
      global_frame: map
      robot_base_frame: base_footprint
      footprint: "[[0.219575,0.245], [-0.3955,0.245], [-0.3955,-0.245], [0.219575,-0.245]]"
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: virtual_obstacle_source scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 9.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.0
        virtual_obstacle_source:
          topic: /Global_virtual_wall
          data_type: PointCloud2
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          obstacle_max_range: 100.0
          raytrace_max_range: 101.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.7
      always_send_full_costmap: True

map_server:
  ros__parameters:
    yaml_filename: "" #"office.yaml"

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    planner_plugins: ["GridBased"]
    costmap_update_timeout: 1.0
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"
    assisted_teleop:
      plugin: "nav2_behaviors::AssistedTeleop"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_footprint #base_link
    transform_tolerance: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [2.0, 0.0, 2.0]
    min_velocity: [-2.0, 0.0, -2.0]
    max_accel: [3.5, 0.0, 3.5]
    max_decel: [-3.5, 0.0, -3.5]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

collision_monitor:
  ros__parameters:
    base_frame_id: "base_footprint"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel_nav2"
    state_topic: "collision_monitor_state"
    transform_tolerance: 0.2
    source_timeout: 1.0
    base_shift_correction: True
    stop_pub_timeout: 2.0

    polygons: ["VelocityPolygonStop"]
    VelocityPolygonStop:
      type: "velocity_polygon"
      action_type: "slowdown" #"stop"
      min_points: 6
      visualize: True
      enabled: True
      polygon_pub_topic: "velocity_polygon_slow"
      velocity_polygons: ["rotation", "translation_forward_high", "translation_forward_low", "translation_backward", "stopped"]
      holonomic: false
      #slowdown_ratio: 0.4
      rotation:
        points: "[[0.249575, 0.285], [0.249575, -0.285], [-0.4, -0.285], [-0.4, 0.285]]"
        linear_min: 0.0
        linear_max: 0.05
        theta_min: -1.5
        theta_max: 1.5
      translation_forward_high:
        points: "[[1.3, 0.35], [1.3, -0.35], [-0.4, -0.35], [-0.4, 0.35]]"
        linear_min: 0.7
        linear_max: 1.5
        theta_min: -1.5
        theta_max: 1.5
      translation_forward_low:
        points: "[[0.8, 0.35], [0.8, -0.35], [-0.4, -0.35], [-0.4, 0.35]]"
        linear_min: 0.4
        linear_max: 0.699
        theta_min: -1.5
        theta_max: 1.5
      translation_backward:
        points: "[[0.2, 0.285], [0.2, -0.285], [-0.5, -0.285], [-0.5, 0.285]]"
        linear_min: -0.5
        linear_max: 0.0
        theta_min: -1.5
        theta_max: 1.5
      stopped:
        points: "[[0.249575, 0.285], [0.249575, -0.285], [-0.4, -0.285], [-0.4, 0.285]]"
        linear_min: -0.8
        linear_max: 0.8
        theta_min: -1.5
        theta_max: 1.5
    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "scan"
      min_height: 0.15
      max_height: 2.0
      enabled: True

docking_server:
  ros__parameters:
    controller_frequency: 50.0
    initial_perception_timeout: 5.0
    wait_charge_timeout: 5.0
    dock_approach_timeout: 30.0
    undock_linear_tolerance: 0.05
    undock_angular_tolerance: 0.1
    max_retries: 3
    base_frame: "base_footprint"
    fixed_frame: "odom"
    dock_backwards: false
    dock_prestaging_tolerance: 0.5

    # Types of docks
    dock_plugins: ['simple_charging_dock']
    simple_charging_dock:
      plugin: 'opennav_docking::SimpleChargingDock'
      docking_threshold: 0.05
      staging_x_offset: -0.7
      use_external_detection_pose: true
      use_battery_status: false # true
      use_stall_detection: false # true

      external_detection_timeout: 1.0
      external_detection_translation_x: -0.18
      external_detection_translation_y: 0.0
      external_detection_rotation_roll: -1.57
      external_detection_rotation_pitch: -1.57
      external_detection_rotation_yaw: 0.0
      filter_coef: 0.1

    # Dock instances
    # The following example illustrates configuring dock instances.
    # docks: ['home_dock']  # Input your docks here
    # home_dock:
    #   type: 'simple_charging_dock'
    #   frame: map
    #   pose: [0.0, 0.0, 0.0]

    controller:
      k_phi: 3.0
      k_delta: 2.0
      v_linear_min: 0.15
      v_linear_max: 0.15
